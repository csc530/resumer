// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resumer.models;

#nullable disable

namespace resume_builder.Migrations
{
    [DbContext(typeof(ResumeContext))]
    partial class ResumeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Resumer.models.Certificate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CredentialId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Issuer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileEmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileFirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileLastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfilePhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProfileFirstName", "ProfileLastName", "ProfileEmailAddress", "ProfilePhoneNumber");

                    b.ToTable("Certificate");
                });

            modelBuilder.Entity("Resumer.models.Education", b =>
                {
                    b.Property<string>("School")
                        .HasColumnType("TEXT");

                    b.Property<string>("Degree")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FieldOfStudy")
                        .HasColumnType("TEXT");

                    b.Property<float?>("GradePointAverage")
                        .HasColumnType("REAL");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileEmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileFirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileLastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfilePhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("School", "Degree", "StartDate");

                    b.HasIndex("ProfileFirstName", "ProfileLastName", "ProfileEmailAddress", "ProfilePhoneNumber");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("Resumer.models.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Resumer.models.Profile", b =>
                {
                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Interests")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Objective")
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .HasColumnType("TEXT");

                    b.HasKey("FirstName", "LastName", "EmailAddress", "PhoneNumber");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Resumer.models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Resumer.models.Skill", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Resumer.models.Certificate", b =>
                {
                    b.HasOne("Resumer.models.Profile", null)
                        .WithMany("Certifications")
                        .HasForeignKey("ProfileFirstName", "ProfileLastName", "ProfileEmailAddress", "ProfilePhoneNumber");
                });

            modelBuilder.Entity("Resumer.models.Education", b =>
                {
                    b.HasOne("Resumer.models.Profile", null)
                        .WithMany("Education")
                        .HasForeignKey("ProfileFirstName", "ProfileLastName", "ProfileEmailAddress", "ProfilePhoneNumber");
                });

            modelBuilder.Entity("Resumer.models.Profile", b =>
                {
                    b.Navigation("Certifications");

                    b.Navigation("Education");
                });
#pragma warning restore 612, 618
        }
    }
}
